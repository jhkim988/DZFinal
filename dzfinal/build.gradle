plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.8'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.douzone'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

bootJar {
	archivesBaseName = 'dzfinal'
	archiveFileName = 'main.jar'
	archiveVersion = "0.0.1"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

ext {
	set('springCloudVersion', "2021.0.1")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// DB
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.0'

	// mqtt
	implementation "org.springframework.integration:spring-integration-mqtt:5.5.16"

	// thumbnail
	implementation 'net.coobird:thumbnailator:0.4.1'

	// security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.cloud:spring-cloud-starter-oauth2:2.2.5.RELEASE'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'

	// swagger 세팅
	implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation 'io.springfox:springfox-swagger2:2.9.2'

	// util
	// MqttOutboundGateway에서 patload의 chatDTO가 리스트라서 필요함.
	// chatingInboundAdapter에서 adapter.setConverter(new DefaultPahoMessageConverter()); 이거는 gson을 안쓰면 String, byte[]만 보내준다.
	// implementation 'com.google.code.gson:gson:2.8.9'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.hibernate:hibernate-validator:8.0.0.Final'

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	
}

tasks.named('test') {
	useJUnitPlatform()
}