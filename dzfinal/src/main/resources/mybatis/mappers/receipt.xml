<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.douzone.dzfinal.repository.ReceiptRepository">
	
	<!-- 수납할 사람 데이터 가져오기 -->
 	<select id="findOneByReception" resultType="com.douzone.dzfinal.dto.ReceiptDTO$ReceptionInfo">
<!-- 	  SELECT
               r.reception_id       reception_id,
               r.doctor				doctor,
               p.patient_id       	patient_id,
               p.patient_name      	patient_name,
               p.insurance       	insurance,
               p.gender				gender,
               p.front_registration_number	front_registration_number,
               p.back_registration_number	back_registration_number,
               p.address			address,
               p.detail_address		detail_address,
               c.treatment       	treatment,
               c.clinic_request    	clinic_request,
               (SELECT IF (COUNT(*) > 0, 1, 0) FROM Prescription pr WHERE pr.reception_id = 1) has_prescription
      FROM       	Reception r 
      INNER JOIN    Patient p ON r.patient_id = p.patient_id
      INNER JOIN    Clinic c  ON r.reception_id = c.reception_id
      WHERE       	r.reception_id = #{reception_id};
       -->
      
      	SELECT
	               r.reception_id       		reception_id,
	               r.doctor						doctor,
	               p.patient_id       			patient_id,
	               p.patient_name      			patient_name,
	               p.insurance       			insurance,
	               p.gender						gender,
	               p.front_registration_number	front_registration_number,
	               p.back_registration_number	back_registration_number,
	               p.address					address,
	               p.detail_address				detail_address,
	               c.treatment       			treatment,
	               c.clinic_request    			clinic_request,
	               rt.receipt_id 				receipt_id,
	               (SELECT IF (COUNT(*) > 0, 1, 0) FROM Prescription pr WHERE pr.reception_id = 1) has_prescription
	      FROM       	Reception r 
	      LEFT JOIN    Patient p ON r.patient_id = p.patient_id
	      LEFT JOIN    Clinic c  ON r.reception_id = c.reception_id
	      LEFT JOIN 	Receipt rt ON r.reception_id = rt.reception_id 
	      WHERE       	r.reception_id = #{reception_id};
	</select>
	
	<select id="selectReceiptDetail" resultType="hashmap">
<!-- 	  SELECT
               r.reception_id       reception_id,
               r.doctor				doctor,
               p.patient_id       	patient_id,
               p.patient_name      	patient_name,
               p.insurance       	insurance,
               p.gender				gender,
               p.front_registration_number	front_registration_number,
               p.back_registration_number	back_registration_number,
               p.address			address,
               p.detail_address		detail_address,
               c.treatment       	treatment,
               c.clinic_request    	clinic_request,
               (SELECT IF (COUNT(*) > 0, 1, 0) FROM Prescription pr WHERE pr.reception_id = 1) has_prescription
      FROM       	Reception r 
      INNER JOIN    Patient p ON r.patient_id = p.patient_id
      INNER JOIN    Clinic c  ON r.reception_id = c.reception_id
      WHERE       	r.reception_id = #{reception_id}; -->
      
         SELECT
	               r.reception_id       		reception_id,
	               r.doctor						doctor,
	               p.patient_id       			patient_id,
	               p.patient_name      			patient_name,
	               p.insurance       			insurance,
	               p.gender						gender,
	               p.front_registration_number	front_registration_number,
	               p.back_registration_number	back_registration_number,
	               p.address					address,
	               p.detail_address				detail_address,
	               c.treatment       			treatment,
	               c.clinic_request    			clinic_request,
	               rt.receipt_id 				receipt_id,
	               (SELECT IF (COUNT(*) > 0, 1, 0) FROM Prescription pr WHERE pr.reception_id = 1) has_prescription
	      FROM       	Reception r 
	      LEFT JOIN    Patient p ON r.patient_id = p.patient_id
	      LEFT JOIN    Clinic c  ON r.reception_id = c.reception_id
	      LEFT JOIN 	Receipt rt ON r.reception_id = rt.reception_id 
	      WHERE       	r.reception_id = #{reception_id};
      
      
	</select>





	<!-- 수납완료! -->
	<insert id="insertReceipt" parameterType="com.douzone.dzfinal.entity.Receipt">
		insert into Receipt(
								reception_id,
								ratio,
								total_amount,
								card_name,
								card_number,
								mode,
								creator
								)
			values(
					#{reception_id},
					#{ratio},
					#{total_amount},
					#{card_name},
					#{card_number},
					#{mode},
					1
					)
	</insert>
	
	
	
	
	
	<!-- 수납수정 -->
	<insert id="updateReceipt" parameterType="com.douzone.dzfinal.entity.Receipt" useGeneratedKeys="true" keyProperty="receipt_id">
		insert into Receipt(
								reception_id,
								ratio,
								total_amount,
								card_name,
								card_number,
								mode,
								creator
								)
			values(
					#{reception_id},
					#{ratio},
					#{total_amount},
					#{card_name},
					#{card_number},
					#{mode},
					1
					)
	</insert>
	




	<!-- 처방전 정보 가져오기! -->
	<select id="getTreatmentInfo" resultType="com.douzone.dzfinal.dto.ReceiptDTO$TreatmentInfo">
		SELECT 
			ds.disease_code 				disease_code,
			ds.disease_name 				disease_name,
			
			dr.drug_code 					drug_code,
			dr.drug_name 					drug_name,
			
			d.created_at 					created_at
		FROM 		Reception r
		INNER JOIN 	Diagnosis d 	  ON r.reception_id = d.reception_id
		INNER JOIN 	Disease ds 		  ON d.disease_id = ds.disease_id 
		INNER JOIN 	Prescription pr   ON r.reception_id = pr.reception_id
		INNER JOIN 	Drug dr 		  ON pr.drug_id =dr.drug_id
		WHERE 		r.reception_id = #{reception_id};
	</select>
	
	
	<select id="getTreatment" resultType="hashmap">
		SELECT 
			ds.disease_code 				disease_code,
			ds.disease_name 				disease_name,
			
			dr.drug_code 					drug_code,
			dr.drug_name 					drug_name,
			
			d.created_at 					created_at
		FROM 		Reception r
		INNER JOIN 	Diagnosis d 	  ON r.reception_id = d.reception_id
		INNER JOIN 	Disease ds 		  ON d.disease_id = ds.disease_id 
		INNER JOIN 	Prescription pr   ON r.reception_id = pr.reception_id
		INNER JOIN 	Drug dr 		  ON pr.drug_id =dr.drug_id
		WHERE 		r.reception_id = #{reception_id};
	</select>
	
	
	
	
	
	
	
	
	<!-- 진료의뢰서 정보 가져오기! -->
	<select id="getClinicRequestInfo" resultType="com.douzone.dzfinal.dto.ReceiptDTO$ClinicRequestInfo">
		SELECT 
			ds.disease_code 				disease_code,
			ds.disease_name 				disease_name,
			
			dr.drug_code 					drug_code,
			dr.drug_name 					drug_name,
			
			d.created_at 					created_at
		FROM 		Reception r
		INNER JOIN 	Diagnosis d 	  ON r.reception_id = d.reception_id
		INNER JOIN 	Disease ds 		  ON d.disease_id = ds.disease_id 
		INNER JOIN 	Prescription pr   ON r.reception_id = pr.reception_id
		INNER JOIN 	Drug dr 		  ON pr.drug_id =dr.drug_id
		WHERE 		r.patient_id = #{patient_id};
	</select>
	
	
	<select id="getClinicRequest" resultType="hashmap">
		SELECT 
			ds.disease_code 				disease_code,
			ds.disease_name 				disease_name,
			
			dr.drug_code 					drug_code,
			dr.drug_name 					drug_name,
			
			d.created_at 					created_at
		FROM 		Reception r
		INNER JOIN 	Diagnosis d 	  ON r.reception_id = d.reception_id
		INNER JOIN 	Disease ds 		  ON d.disease_id = ds.disease_id 
		INNER JOIN 	Prescription pr   ON r.reception_id = pr.reception_id
		INNER JOIN 	Drug dr 		  ON pr.drug_id =dr.drug_id
		WHERE 		r.patient_id = #{patient_id};
	</select>


	


	<!-- 수납완료내역 정보 가져오기! -->
	<select id="getReceiptList" parameterType="hashmap" resultType="com.douzone.dzfinal.dto.ReceiptDTO$GetReceiptList">		 
		SELECT 
		    rt.receipt_id                   receipt_id,
		    r.reception_id                  reception_id,
		    r.doctor                        doctor,
		    p.patient_id                    patient_id,
		    p.patient_name                  patient_name,
		    p.front_registration_number    front_registration_number,
		    p.phone_number3                 phone_number3,
		    ds.disease_name                 disease_name,
		    dr.drug_name                    drug_name,
		    rt.total_amount                 total_amount,
		    rt.mode                         mode,
		    rt.created_at                   created_at,
 		    COUNT(DISTINCT ds.disease_id)                AS disease_count,
 		    COUNT(DISTINCT pr.prescription_id) 			 AS prescription_count
		FROM Reception r
		INNER JOIN Patient p ON r.patient_id = p.patient_id
		INNER JOIN Diagnosis d ON r.reception_id = d.reception_id
		INNER JOIN Disease ds ON d.disease_id = ds.disease_id
		INNER JOIN Prescription pr ON r.reception_id = pr.reception_id
		INNER JOIN Drug dr ON pr.drug_id = dr.drug_id
		INNER JOIN Receipt rt ON r.reception_id = rt.reception_id
		WHERE
		    1=1
		    <if test='start_date != null and start_date != ""'>
		        <![CDATA[ AND DATE(#{start_date}) <=  DATE(rt.created_at) ]]>
		    </if>
		    <if test='end_date != null and end_date != ""'>
		        <![CDATA[ AND DATE(rt.created_at) <=  DATE(#{end_date}) ]]>
		    </if>
		    <if test='type == "patient_id"'> 	AND 	p.patient_id = #{searchText}</if>
		    <if test='type == "patient_name"'> 	AND 	p.patient_name LIKE CONCAT(#{searchText}, '%') </if>
		    <if test='type == "reception_id"'> 	AND 	r.reception_id = #{searchText} </if>
		GROUP BY 	rt.reception_id
		<!-- HAVING 		r.reception_id = #{searchText} OR p.patient_name = #{searchText} -->
		ORDER BY 	rt.created_at DESC;


<!--   		SELECT 
		    rt.receipt_id                   receipt_id,
		    r.reception_id                  reception_id,
		    r.doctor                        doctor,
		    p.patient_id                    patient_id,
		    p.patient_name                  patient_name,
		    p.front_registration_number    front_registration_number,
		    p.phone_number3                 phone_number3,
		    ds.disease_name                 disease_name,
		    dr.drug_name                    drug_name,
		    rt.total_amount                 total_amount,
		    rt.mode                         mode,
		    rt.created_at                   created_at,
			COUNT(*) 			AS 			receipt_count
		FROM Reception r
		INNER JOIN Patient p ON r.patient_id = p.patient_id
		INNER JOIN Diagnosis d ON r.reception_id = d.reception_id
		INNER JOIN Disease ds ON d.disease_id = ds.disease_id
		INNER JOIN Prescription pr ON r.reception_id = pr.reception_id
		INNER JOIN Drug dr ON pr.drug_id =dr.drug_id
		INNER JOIN Receipt rt ON r.reception_id = rt.reception_id
		WHERE
		<if test="type == patient_name"> patient_name = #{patient_name} </if>
		<if test="type == reception_id"> reception_id = #{reception_id} </if>
			AND rt.created_at BETWEEN #{start_date} AND #{end_date}
			AND rt.reception_id = #{searchText}
		    		(#{type} = '' AND #{searchText} = '') OR
		    		(#{type} = 'patient_name' AND p.patient_name LIKE CONCAT('%', #{searchText}, '%')) OR
		    		(#{type} = 'reception_id' AND r.reception_id = #{searchText})
		    		AND rt.created_at BETWEEN #{start_date} AND #{end_date}
		GROUP BY 	(rt.reception_id = #{searchText})
		HAVING 		(r.reception_id = #{searchText}) OR (p.patient_name = #{searchText})
		ORDER BY 	rt.created_at DESC; -->


<!--    		 SELECT 
			rt.receipt_id 					receipt_id,
			r.reception_id       			reception_id,
			r.doctor 						doctor,
			p.patient_id       				patient_id,
			p.patient_name      			patient_name,
			p.front_registration_number 	front_registration_number,
			p.phone_number3 				phone_number3,
			ds.disease_name 				disease_name,
			dr.drug_name 					drug_name,
			rt.total_amount 				total_amount,
			rt.mode 						mode,
			rt.created_at 					created_at 
		FROM 		Reception r
		 INNER JOIN 	Patient p 		  ON r.patient_id = p.patient_id
		 INNER JOIN 	Diagnosis d 	  ON r.reception_id = d.reception_id
		 INNER JOIN 	Disease ds 		  ON d.disease_id = ds.disease_id
		 INNER JOIN 	Prescription pr   ON r.reception_id = pr.reception_id
		 INNER JOIN 	Drug dr 		  ON pr.drug_id =dr.drug_id
		 INNER JOIN  	Receipt rt 		  ON r.reception_id = rt.reception_id
		 WHERE
		  CASE
		    WHEN #{type} = 'patient_name' THEN p.patient_name LIKE CONCAT('%',#{searchText}, '%')
		    WHEN #{type} = 'reception_id' THEN r.reception_id = #{searchText}
		    ELSE FALSE
		  END
		  AND rt.created_at BETWEEN #{start_date} AND #{end_date}
		 ORDER BY rt.created_at desc; -->
		 
		 
		 
		<!--  SELECT 
			rt.receipt_id 					receipt_id,
			r.reception_id       			reception_id,
			r.doctor 						doctor,
			p.patient_id       				patient_id,
			p.patient_name      			patient_name,
			p.front_registration_number 	front_registration_number,
			p.phone_number3 				phone_number3,
			ds.disease_name 				disease_name,
			dr.drug_name 					drug_name,
			rt.total_amount 				total_amount,
			rt.mode 						mode,
			rt.created_at 					created_at 
		FROM 		Reception r
		 INNER JOIN 	Patient p 		  ON r.patient_id = p.patient_id
		 INNER JOIN 	Diagnosis d 	  ON r.reception_id = d.reception_id
		 INNER JOIN 	Disease ds 		  ON d.disease_id = ds.disease_id
		 INNER JOIN 	Prescription pr   ON r.reception_id = pr.reception_id
		 INNER JOIN 	Drug dr 		  ON pr.drug_id =dr.drug_id
		 INNER JOIN  	Receipt rt 		  ON r.reception_id = rt.reception_id
		 WHERE
		  CASE
		    WHEN 'type' = 'patient_name' THEN p.patient_name LIKE '%searchText%'
		    WHEN 'type' = 'reception_id' THEN rt.reception_id = 'searchText'
		    ELSE FALSE
		  END
		  AND ( 
		        rt.created_at BETWEEN #{start_date} AND #{end_date}
		        OR NOT EXISTS (
		            SELECT 1
		            FROM Receipt
		            WHERE created_at BETWEEN #{start_date} AND #{end_date}
		        )
		    ); -->
	</select>
	
	<select id="getReceipt" resultType="hashmap">
<!-- 		SELECT 
			rt.receipt_id 					receipt_id,
			r.reception_id       			reception_id,
			r.doctor 						doctor,
			p.patient_id       				patient_id,
			p.patient_name      			patient_name,
			p.front_registration_number 	front_registration_number,
			p.phone_number3 				phone_number3,
			ds.disease_name 				disease_name,
			dr.drug_name 					drug_name,
			rt.total_amount 				total_amount,
			rt.mode 						mode,
			rt.created_at 					created_at 
		FROM 		Reception r
		 INNER JOIN 	Patient p 		  ON r.patient_id = p.patient_id
		 INNER JOIN 	Diagnosis d 	  ON r.reception_id = d.reception_id
		 INNER JOIN 	Disease ds 		  ON d.disease_id = ds.disease_id
		 INNER JOIN 	Prescription pr   ON r.reception_id = pr.reception_id
		 INNER JOIN 	Drug dr 		  ON pr.drug_id =dr.drug_id
		 INNER JOIN  Receipt rt 		  ON r.reception_id = rt.reception_id; -->
		 
		SELECT 
			rt.receipt_id 					receipt_id,
			r.reception_id       			reception_id,
			r.doctor 						doctor,
			p.patient_id       				patient_id,
			p.patient_name      			patient_name,
			p.front_registration_number 	front_registration_number,
			p.phone_number3 				phone_number3,
			ds.disease_name 				disease_name,
			dr.drug_name 					drug_name,
			rt.total_amount 				total_amount,
			rt.mode 						mode,
			rt.created_at 					created_at 
		FROM 		Reception r
		 INNER JOIN 	Patient p 		  ON r.patient_id = p.patient_id
		 INNER JOIN 	Diagnosis d 	  ON r.reception_id = d.reception_id
		 INNER JOIN 	Disease ds 		  ON d.disease_id = ds.disease_id
		 INNER JOIN 	Prescription pr   ON r.reception_id = pr.reception_id
		 INNER JOIN 	Drug dr 		  ON pr.drug_id =dr.drug_id
		 INNER JOIN  Receipt rt 		  ON r.reception_id = rt.reception_id;
		 <choose>
		 	<when test="type == 'patient_name'">
		 		WHERE p.patient_name LIKE '%searchText%'
		 	</when>
		 	<when test="type == 'reception_id'">
		 		WHERE r.reception_id LIKE CONCAT(#{keyword}, '%')
		 	</when>
		 </choose>
		WHERE rt.created_at BETWEEN #{start_date} AND #{end_date};
	</select>

	<select id="findOneByReceptionId" resultType="com.douzone.dzfinal.entity.Receipt">
		select * from Receipt where reception_id = #{reception_id}
	</select>
	
	
	
	
	<!-- 수납목록 중 선택한 데이터 하나 가져오기 -->
	<select id="selectedOneReceipt" resultType="hashmap">
	  SELECT
	  		   rt.receipt_id		receipt_id,
	  		   rt.card_name			crad_name,
	  		   rt.card_number		card_number,
               r.reception_id       reception_id,
               r.doctor				doctor,
               p.patient_id       	patient_id,
               p.patient_name      	patient_name,
               p.insurance       	insurance,
               p.gender				gender,
               p.front_registration_number	front_registration_number,
               p.back_registration_number	back_registration_number,
               p.address			address,
               p.detail_address		detail_address,
               c.treatment       	treatment,
               c.clinic_request    	clinic_request
      FROM       	Receipt rt
      INNER JOIN	Reception r ON rt.reception_id = r.reception_id
      INNER JOIN    Patient p ON r.patient_id = p.patient_id
      INNER JOIN    Clinic c  ON r.reception_id = c.reception_id
      WHERE       	r.reception_id = #{reception_id};
	</select>
</mapper>